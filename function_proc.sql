USE QUANLYKHACHSAN
GO

/*Hàm thêm tài khoản nhân viên*/
CREATE PROC [dbo].[ADD_ACCOUNT]
@userName varchar(20), 
@passWord varchar(20),
@employee_id varchar(20)
AS
BEGIN
	INSERT INTO [dbo].ACCOUNT(USERNAME, PASS, EMPLOYEE_ID) 
	VALUES (@userName, @passWord, @employee_id) 
	SELECT * FROM dbo.ACCOUNT WHERE EMPLOYEE_ID = @employee_id
END

--EXEC ADD_ACCOUNT @USERNAME='TEST', @PASSWORD = '123456', @EMPLOYEE_ID = 'NV04'
GO
/*Hàm tạo mã phiếu thuê phòng tự động */
-- DROP FUNCTION[dbo].[AUTO_RENTBILL]
CREATE FUNCTION [dbo].[AUTO_RENTBILL]()
	RETURNS VARCHAR(20)
	AS
	BEGIN
    DECLARE @RENT_ID VARCHAR(20)
	DECLARE @COUNT INT 
	SELECT @COUNT = COUNT(RENT_ID) FROM RENT_BILL
	SET @RENT_ID = (SELECT	TOP (1) LEFT(RENT_ID,1) + CAST((RIGHT(RENT_ID,LEN(RENT_ID)-1)) + 1 AS VARCHAR(20))
	from RENT_BILL order by CAST(RIGHT(RENT_ID,LEN(RENT_ID)-1) AS INT) desc)
	RETURN isnull(@RENT_ID, 'R00')
END

--SELECT [dbo].[AUTO_RENTBILL]()  GO
GO
/*Hàm THÊM PHIẾU ĐĂNG KÝ PHÒNG*/
--DROP PROC[dbo].[ADD_RENTBILL]
CREATE PROC [dbo].[ADD_RENTBILL]
@ROOM_ID VARCHAR(20),
@CUSTOMER_NAME NVARCHAR(50),
@CUSTOMER_ID VARCHAR(20)
AS
BEGIN
	DECLARE @RENT_ID VARCHAR(20)
	SET @RENT_ID = (SELECT [dbo].[AUTO_RENTBILL]())
	INSERT INTO RENT_BILL (RENT_ID, ROOM_ID,START_DATE, CUSTOMER_NAME, CUSTOMER_ID)
	VALUES (@RENT_ID, @ROOM_ID,GETDATE(), @CUSTOMER_NAME, @CUSTOMER_ID)
END
--EXEC ADD_RENTBILL @ROOM_ID = 'P100', @CUSTOMER_NAME=N'Test Dữ liệu', @CUSTOMER_ID='KH012'
GO
/*Hàm cập nhật tình trạng phòng*/
CREATE PROC [dbo].[update_room_status]
@room_id varchar(20)
AS
BEGIN
	declare @number_customer int
	set @number_customer = (SELECT COUNT(CUSTOMER_ID)
							FROM RENT_BILL
							WHERE ROOM_ID =@room_id)
	UPDATE ROOM
	SET STATUS = 1, CUSTOMER_NUMBERS = @number_customer
	WHERE ROOM_ID= @room_id
	SELECT * FROM dbo.ROOM WHERE ROOM_ID= @room_id
END
GO
/*Hàm kiểm tra khách hàng đã đăng ký*/
CREATE PROC [dbo].[check_customer]
@CMND INT
AS
BEGIN
SELECT COUNT(CUSTOMER_ID)
			FROM CUSTOMER
			WHERE ID_CARD = @CMND
END
GO

/*Hàm tạo mã khách hàng tự động */
--DROP FUNCTION [dbo].[AUTO_CUSTOMER]
CREATE FUNCTION [dbo].[AUTO_CUSTOMER]()
	RETURNS VARCHAR(20)
	AS
	BEGIN
    DECLARE @CUSTOMER_ID VARCHAR(20)
	DECLARE @COUNT INT 
	SELECT @COUNT = COUNT(CUSTOMER_ID) FROM CUSTOMER
	SET @CUSTOMER_ID = (SELECT	TOP (1) LEFT(CUSTOMER_ID,3) + CAST(RIGHT(CUSTOMER_ID,LEN(CUSTOMER_ID)-3) + 1 AS VARCHAR(20))
	from CUSTOMER order by CAST(RIGHT(CUSTOMER_ID,LEN(CUSTOMER_ID)-3)AS INT) desc)
	RETURN isnull(@CUSTOMER_ID, 'KH0')
END

-- SELECT [dbo].[AUTO_CUSTOMER]()
GO
/*Hàm tính số ngày thuê*/
--DROP FUNCTION [DBO].[RENT_DAY]
CREATE FUNCTION [DBO].[RENT_DAY]
(@ROOM_ID VARCHAR(20))
RETURNS INT
AS
BEGIN
	DECLARE @DAY_BEGIN DATETIME = (SELECT top(1) START_DATE FROM RENT_BILL WHERE ROOM_ID= @ROOM_ID ORDER BY START_DATE ASC)
	DECLARE @SONGAY INT =(SELECT DATEDIFF(day, @DAY_BEGIN, GETDATE()))
	RETURN ISNULL(@SONGAY,0)
END
-- SELECT DBO.RENT_DAY('P102')
GO
/*Hàm tính tiền thuê phòng*/
--DROP FUNCTION [DBO].[PAYMENT_BILL]
CREATE FUNCTION [DBO].[PAYMENT_BILL]
(@ROOM_ID VARCHAR(20), @SONGAY INT)
RETURNS FLOAT
AS
BEGIN
	DECLARE @DONGIA FLOAT = (SELECT PRICE FROM ROOM WHERE ROOM_ID=@ROOM_ID)
	DECLARE @SONGUOI INT = (SELECT COUNT(CUSTOMER_ID) FROM RENT_BILL WHERE ROOM_ID= @ROOM_ID)
	DECLARE @TONGTIEN FLOAT =0
	DECLARE @TYPE INT =(SELECT COUNT(CUSTOMER.CUSTOMER_ID) FROM CUSTOMER, RENT_BILL 
						WHERE CUSTOMER.TYPE_CUSTOMER=N'Nước ngoài' and RENT_BILL.ROOM_ID= @ROOM_ID AND CUSTOMER.CUSTOMER_ID = RENT_BILL.CUSTOMER_ID)
	IF (@SONGUOI <=2)
	BEGIN
		SET @TONGTIEN = @DONGIA * @SONGAY * @SONGUOI 
	END
	ELSE
	BEGIN
		SET @TONGTIEN = @DONGIA * @SONGAY * (2 + (@SONGUOI -2)*0.25)
	END
	IF(@TYPE >0)
	BEGIN
		SET @TONGTIEN = @TONGTIEN*1.5
	END
	RETURN @TONGTIEN
END
--SELECT DBO.PAYMENT_BILL ('P103', (SELECT DBO.RENT_DAY('P103')))
GO
/*Hàm tự động mã BILL_ID*/
--DROP FUNCTION [dbo].[AUTO_BILLID]
CREATE FUNCTION [dbo].[AUTO_BILLID]()
	RETURNS VARCHAR(20)
	AS
	BEGIN
    DECLARE @BILL_ID VARCHAR(20)
	DECLARE @COUNT INT 
	SELECT @COUNT = COUNT(BILL_ID) FROM BILL
	SET @BILL_ID = (SELECT	TOP (1) LEFT(BILL_ID,3) + CAST(RIGHT(BILL_ID,LEN(BILL_ID)-3) + 1 AS VARCHAR(20))
	from BILL order by CAST(RIGHT(BILL_ID,LEN(BILL_ID)-3) AS INT) desc)
	RETURN isnull(@BILL_ID, 'B001')
END
--SELECT DBO.AUTO_BILLID()
GO
/*Hàm tự động mã BILL_INFO_ID*/
--DROP FUNCTION [dbo].[AUTO_BILL_INFO_ID]
CREATE FUNCTION [dbo].[AUTO_BILL_INFO_ID]()
	RETURNS VARCHAR(20)
	AS
	BEGIN
    DECLARE @BILL_INFO_ID VARCHAR(20)
	DECLARE @COUNT INT 
	SELECT @COUNT = COUNT(BILL_INFO_ID) FROM BILL_INFO
	SET @BILL_INFO_ID = (SELECT	TOP (1) LEFT(BILL_INFO_ID,3) + CAST(RIGHT(BILL_INFO_ID,LEN(BILL_INFO_ID)-3) + 1 AS VARCHAR(20))
	from BILL_INFO order by CAST(RIGHT(BILL_INFO_ID,LEN(BILL_INFO_ID)-3) AS INT) desc)
	RETURN isnull(@BILL_INFO_ID, 'BI01')
END
--SELECT DBO.AUTO_BILL_INFO_ID()
GO
/*Thêm hóa đơn*/
--DROP PROC [DBO].[INSERT_BILL]
CREATE PROC [DBO].[INSERT_BILL]
@ROOM_ID VARCHAR(20), @CUSTOMER_NAME NVARCHAR(50)
AS
BEGIN
	DECLARE @DAY_BEGIN DATETIME = (SELECT top(1) START_DATE FROM RENT_BILL WHERE ROOM_ID= @ROOM_ID ORDER BY START_DATE ASC)
	DECLARE @SONGAY INT =(SELECT DATEDIFF(day, @DAY_BEGIN, GETDATE()))
	DECLARE @BILL_ID VARCHAR(20) =(SELECT DBO.AUTO_BILLID())
	DECLARE @CUSTOMER_ID VARCHAR(20) = (SELECT TOP(1) CUSTOMER_ID FROM RENT_BILL WHERE ROOM_ID= @ROOM_ID AND CUSTOMER_NAME LIKE '%'+ @CUSTOMER_NAME +'%' ) 
	DECLARE @TOTAL_BILL FLOAT = (SELECT DBO.PAYMENT_BILL (@ROOM_ID, @SONGAY))
	--THÊM BILL
	INSERT INTO BILL (BILL_ID,ROOM_ID,CUSTOMER_ID,DATE_NUMBERS,TOTALBILL)
	VALUES (@BILL_ID, @ROOM_ID, @CUSTOMER_ID, @SONGAY, @TOTAL_BILL)
	-- THÊM BILL_INFO
	DECLARE @BILL_INFO_ID VARCHAR(20) =(SELECT DBO.AUTO_BILL_INFO_ID())
	SET @CUSTOMER_NAME = (SELECT TOP(1)CUSTOMER_NAME FROM RENT_BILL WHERE ROOM_ID=@ROOM_ID AND CUSTOMER_ID= @CUSTOMER_ID)
	DECLARE @ADDRESS NVARCHAR(50) = (SELECT TOP(1) CUSTOMER.ADDRESS FROM CUSTOMER, RENT_BILL WHERE CUSTOMER.CUSTOMER_ID = RENT_BILL.CUSTOMER_ID AND RENT_BILL.ROOM_ID = @ROOM_ID)
	DECLARE @DONGIA FLOAT = (SELECT PRICE FROM ROOM WHERE ROOM_ID=@ROOM_ID)
	INSERT INTO BILL_INFO( BILL_INFO_ID,BILL_ID,ROOM_ID,CUSTOMER_ID,CUSTOMER_NAME,ADDRESS,VALUE_PRICE,PRICE,PAY_DAY,MONEY)
	VALUES	(@BILL_INFO_ID, @BILL_ID, @ROOM_ID, @CUSTOMER_ID, @CUSTOMER_NAME, @ADDRESS, @TOTAL_BILL, @DONGIA, GETDATE(), @TOTAL_BILL)

END
--EXEC INSERT_BILL @ROOM_ID ='P108', @CUSTOMER_NAME = 'OANH'
GO

/*Trả phòng*/
CREATE PROC [DBO].[CHECKOUT_ROOM]
@ROOM_ID VARCHAR(20)
AS
BEGIN
	--CẬP NHẬT PHÒNG
	UPDATE ROOM
	SET STATUS = 0, CUSTOMER_NUMBERS = 0
	WHERE ROOM_ID= @room_id
	--XÓA THÔNG TIN PHIẾU THUÊ
	DELETE FROM RENT_BILL
	WHERE ROOM_ID = @ROOM_ID
END
GO
--EXEC CHECKOUT_ROOM @ROOM_ID ='P105' 

--DROP PROC [DBO].[THANHTOAN]
CREATE PROC [DBO].[THANHTOAN]
@ROOM_ID VARCHAR(20), @CUSTOMER_NAME NVARCHAR(50)
AS
BEGIN
EXEC INSERT_BILL @ROOM_ID =@ROOM_ID, @CUSTOMER_NAME = @CUSTOMER_NAME
EXEC CHECKOUT_ROOM @ROOM_ID =@ROOM_ID
END

--EXEC THANHTOAN @ROOM_ID ='P101', @CUSTOMER_NAME = N'Test Dữ liệu'
GO
create proc [dbo].[CHECK_LOGIN]
@USERNAME VARCHAR(20), @PASS VARCHAR(20)
AS
BEGIN
SELECT EMPLOYEE_ID FROM ACCOUNT WHERE USERNAME = @USERNAME AND PASS = @PASS
END
-- EXEC CHECK_LOGIN @USERNAME = 'thuyuyen', @PASS ='123456'
GO
 
--DROP PROC [dbo].[get_name_role]
create proc [dbo].[get_name_role]
@maNV varchar(20)
as
begin
SELECT EMPLOYEE_NAME, ROLE FROM EMPLOYEE WHERE EMPLOYEE_ID =@maNV
end
-- EXEC get_name_role @MANV = 'NV04'
GO
-- DROP PROC [DBO].[SHOW_BILL_MONTH]
CREATE PROC [DBO].[SHOW_BILL_MONTH]
@MONTH VARCHAR(3)
AS
BEGIN
	SELECT * FROM BILL_INFO WHERE (SELECT MONTH(PAY_DAY) AS VARCHAR) = @MONTH ORDER BY BILL_INFO_ID ASC
END
-- EXEC SHOW_BILL_MONTH @MONTH = 8
GO

-- DROP PROC [DBO].[REPORT_BILL_MONTH]
CREATE PROC [DBO].[REPORT_BILL_MONTH]
@MONTH VARCHAR(3)
AS
BEGIN
	SELECT ROOM_ID, COUNT(BILL_ID) AS TOTAL_BILL, SUM(MONEY) AS TOTAL_MONEY
	FROM BILL_INFO  
	WHERE (SELECT MONTH(PAY_DAY) AS VARCHAR) = @MONTH 
	GROUP BY ROOM_ID
	ORDER BY ROOM_ID ASC
END
-- EXEC REPORT_BILL_MONTH @MONTH = 8
GO

--DROP FUNCTION [dbo].[AUTO_REGULATIONS_ID]
CREATE FUNCTION [dbo].[AUTO_REGULATIONS_ID]()
	RETURNS VARCHAR(20)
	AS
	BEGIN
    DECLARE @REGULATIONS_ID VARCHAR(20)
	DECLARE @COUNT INT 
	--SELECT @COUNT = COUNT(BILL_INFO_ID) FROM BILL_INFO
	SET @REGULATIONS_ID = (SELECT	TOP (1) LEFT(REGULATIONS_ID,3) + CAST(RIGHT(REGULATIONS_ID,LEN(REGULATIONS_ID)-3) + 1 AS VARCHAR(20))
	from REGULATIONS order by CAST(RIGHT(REGULATIONS_ID,LEN(REGULATIONS_ID)-3) AS INT) desc)
	RETURN isnull(@REGULATIONS_ID, 'QD00')
END
--SELECT DBO.[AUTO_REGULATIONS_ID]()
GO

-- DROP PROC [DBO].[UPDATE_REGULATIONS]
CREATE PROC [DBO].[UPDATE_REGULATIONS]
@TYPE_A INT, @TYPE_B INT, @TYPE_C INT, @MAX_CUSTOMER INT, @SURCHARGE FLOAT
AS BEGIN

	INSERT INTO REGULATIONS (REGULATIONS_ID, DATE_UPDATE, TYPE_A, TYPE_B, TYPE_C, MAX_CUSTOMER, SURCHARGE) 
	VALUES ((SELECT DBO.[AUTO_REGULATIONS_ID]()), GETDATE(), @TYPE_A, @TYPE_B, @TYPE_C, @MAX_CUSTOMER, @SURCHARGE)
	UPDATE ROOM SET PRICE=@TYPE_A WHERE ROOM_TYPE='A'
	UPDATE ROOM SET PRICE=@TYPE_B WHERE ROOM_TYPE='B'
	UPDATE ROOM SET PRICE=@TYPE_C WHERE ROOM_TYPE='C'
END
--EXEC UPDATE_REGULATIONS @TYPE_A=150000, @TYPE_B= 170000, @TYPE_C=200000, @MAX_CUSTOMER=3, @SURCHARGE=0.25
GO

/*thêm thông tin phòng mới*/
CREATE PROC [DBO].[ADD_ROOM]
@ROOM_ID VARCHAR(20), @ROOM_NAME VARCHAR(50), @ROOM_TYPE VARCHAR(50), @NOTE VARCHAR(50)
AS
BEGIN
	DECLARE @PRICE FLOAT = (SELECT TOP(1) PRICE FROM ROOM WHERE ROOM_TYPE = @ROOM_TYPE)
	INSERT INTO ROOM(ROOM_ID,ROOM_NAME,ROOM_TYPE,PRICE, STATUS,NOTE,CUSTOMER_NUMBERS)
	VALUES (@ROOM_ID, @ROOM_NAME, @ROOM_TYPE, @PRICE, 0, @NOTE, 0)
END
GO

--EXEC ADD_ROOM @ROOM_ID ='P201', @ROOM_NAME= 'Phòng 201', @ROOM_TYPE ='A', @NOTE= ''

/*thêm thông tin nhân viên mới*/
CREATE PROC [DBO].[ADD_EMPLOYEE]
@EMPLOYEE_ID VARCHAR(20), @EMPLOYEE_NAME VARCHAR(50), @ADDRESS VARCHAR(50), @PHONE VARCHAR(50), @ROLE BIT
AS
BEGIN
	INSERT INTO EMPLOYEE(EMPLOYEE_ID, EMPLOYEE_NAME, ADDRESS, PHONE, ROLE)
	VALUES (@EMPLOYEE_ID, @EMPLOYEE_NAME, @ADDRESS, @PHONE, @ROLE)
END
--EXEC ADD_EMPLOYEE @EMPLOYEE_ID = 'NV19', @EMPLOYEE_NAME= 'tEST' , @ADDRESS='TEST DIA CHI', @PHONE='153215', @ROLE =0
GO

SELECT * FROM EMPLOYEE ORDER BY EMPLOYEE_ID ASC